plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.0"
}

group = "org.dandoy.dbpopd"
version dbpopVersion

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-validation:3.9.4")
    implementation("io.micronaut.problem:micronaut-problem-json")
    implementation("io.micronaut:micronaut-websocket")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    compileOnly("org.projectlombok:lombok")
    implementation 'ch.qos.logback:logback-classic:1.4.4'
    implementation('org.slf4j:jcl-over-slf4j:2.0.3')
    implementation project(":lib")
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    runtimeOnly("org.yaml:snakeyaml")
    runtimeOnly("com.microsoft.sqlserver:mssql-jdbc:12.4.2.jre11")

    testImplementation "org.testcontainers:testcontainers:1.18.3"
    testImplementation "org.testcontainers:junit-jupiter:1.18.3"
    testImplementation "org.testcontainers:mssqlserver:1.18.3"

    testImplementation project(":test-resources")
}

application {
    mainClass.set("org.dandoy.dbpopd.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

test {
    systemProperty("junit.jupiter.extensions.autodetection.enabled", true)
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.dandoy.dbpopd.*")
    }
}

tasks.register('versionTxt') {
    doLast {
        def file = new File(buildDir, "resources/main/version.txt")
        file.getParentFile().mkdirs()
        file.text = "app.version=$version\n"
    }
}

processResources.finalizedBy([versionTxt])

